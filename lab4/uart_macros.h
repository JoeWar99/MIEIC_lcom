#pragma once

#define BIT(n) (0x01 << (n))



// REGISTERS
#define BASE_REG_COM1 0x3F8
#define RECEIVER_BUFFER_REG 0x3F8
#define INTERRUPT_ENABLE_REGISTER 0x3F9
#define INTERRUPT_ID_REG 0x3FA
#define LINE_CONTROL_REG 0x3FB
#define MODEM_CONTROL_REG 0x3FC
#define LINE_STATUS_REG 0x3FD
#define MODEM_STATUS_REG 0x3FE
#define SCARTCHPAD_REG 0x3FF
#define TRANSMITTER_HOLDING_REG 0x3F8
#define FIFO_CONTROL_REG 0x3FA
#define DLAB_BIT_LOAD BIT(7)
#define DLAB_BIT_LOAD_0 0x7F
#define IRQ_UART_LINE 4


// Line Control Register (LCR)
#define UART_REGISTER_LCR_BITS_PER_CHAR_BIT		0 // 2 bits
#define UART_REGISTER_LCR_NUM_STOP_BITS_BIT		2
#define UART_REGISTER_LCR_PARITY_CONTROL_BIT	3 // 3 bits
#define UART_REGISTER_LCR_BREAK_CONTROL_BIT		6
#define UART_REGISTER_LCR_DLAB_BIT				7

// Line Status Register (LSR) (Read only)
#define UART_REGISTER_LSR_RECEIVER_DATA_BIT		0
#define UART_REGISTER_LSR_OVERRUN_ERROR_BIT		1
#define UART_REGISTER_LSR_PARITY_ERROR_BIT		2
#define UART_REGISTER_LSR_FRAMING_ERROR_BIT		3
#define UART_REGISTER_LSR_BREAK_INTERRUPT_BIT	4
#define UART_REGISTER_LSR_THR_EMPTY_BIT			5
#define UART_REGISTER_LSR_THR_AND_TSR_EMPTY_BIT	6
#define UART_REGISTER_LSR_FIFO_ERROR_BIT		7

// Interrupt Identification Register (IIR)
#define UART_REGISTER_IIR_INTERRUPT_STATUS_BIT	0
#define UART_REGISTER_IIR_INTERRUPT_ORIGIN_BIT	1 // 3 bits
#define UART_REGISTER_IIR_64_BYTE_FIFO			5
#define UART_REGISTER_IIR_FIFO_STATUS			6 // 2 bits

// FIFO Control Register (FCR)
#define UART_REGISTER_FCR_ENABLE_FIFO			0
#define UART_REGISTER_FCR_CLEAR_RECEIVE_FIFO	1
#define UART_REGISTER_FCR_CLEAR_TRANSMIT_FIFO	2
#define UART_REGISTER_FCR_DMA_MODE_SELECT		3
#define UART_REGISTER_FCR_ENABLE_64_BYTE_FIFO	5
#define UART_REGISTER_FCR_FIFO_INT_TRIGGER_LVL	6 // 2 bits

// Interrupt Enable Register (IER)
#define UART_REGISTER_IER_RECEIVED_DATA_INT		0
#define UART_REGISTER_IER_TRANSMITTER_EMPTY_INT	1
#define UART_REGISTER_IER_RECEIVER_LSR_INT		2
#define UART_REGISTER_IER_MODEM_STATUS_INT		3

